#! /usr/bin/env python

# Sun proprietary. Internal use only.

# This file is indented with four-column tab characters.

# SCCS ID: "%Z%%M%  %I% %E% SMI"

"""

Show how many lines each person inserted/deleted/modified.

Example:

find . -name SCCS -prune -o \
     \( -name '*.[chx]' -o -name '*.[ch][ch]' -o -name '*.sh' \) -print \
     | count-sccs-lines 02/06/01 03/02/24

"""

import sys
import string
import os
import time
import re
import commands

def die(s):
    sys.stderr.write(os.path.basename(sys.argv[0]) +": " +s)
    sys.exit(2)

def usage(s=None):
    progName = os.path.basename(sys.argv[0])
    if s:
        sys.stderr.write(progName +": " +s +"\n")
    sys.stderr.write("usage: " +progName +" startDate endDate\n")
    sys.stderr.write("dates are in the SCCS format: yy/mm/dd\n")
    sys.exit(2)

def dateStringToTime(s):
    return time.mktime(time.strptime(s, "%y/%m/%d"))

if __name__ == "__main__":
    args = sys.argv[1:]
    if len(args) != 2:
        usage()

    firstDay = dateStringToTime(args[0])
    lastDay = dateStringToTime(args[1])

    # dates in y/m/d format

    inp = sys.stdin
    outp = sys.stdout

    changerMap = {}

    while 1:
        path = inp.readline().strip()
        if path == "":
            break

##         dirname = os.path.dirname(path)
##         basename = os.path.basename(path)

        out = commands.getoutput("sccs prs %s | grep '^D '" % path)

        for line in out.split("\n"):
            fields = line.split()
            changeDay = dateStringToTime(fields[2])
            if changeDay < firstDay or changeDay > lastDay:
                continue

            changer = fields[4]
            lineCounts = fields[7]
            c0, c1, c2 = lineCounts.split("/")
            c0, c1, c2 = int(c0), int(c1), int(c2)

            print c0, c1, c2, line

            if changerMap.has_key(changer):
                # read Existing Counts and add to them
                ec0,ec1,ec2 = changerMap[changer]
                changerMap[changer] = ec0+c0, ec1+c1, ec2+c2
            else:
                changerMap[changer] = c0, c1, c2

    changers = changerMap.keys()
    changers.sort()
    for changer in changers:
        # insert, delete, update
        c0, c1, c2 = changerMap[changer]
        print "%6d %6d %6d : %s" % (c0, c1, c2, changer)
