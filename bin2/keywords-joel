#!/bin/sh
#
# Copyright (c) 2003 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident	"@(#)keywords	1.1	03/12/08 SMI"
#
# Checks the list of files to make sure that each given
# file has a SMI standard ident string.
#
# It checks that keywords exist, and verifies the string.  By default,
# all allowable forms of keywords (according to the ON documentation)
# are acceptable.  The '-p' option (pedantic) allows only the canonical
# form of keywords. See below for allowable forms.
#
# Use as "keywords filelist" where filelist is the list of
# plain files, which could be the edited output of 'putback -n'.
#
# The following command will check a reasonable subset of ON source
# in a teamware workspace.
#
#	% cd $CODEMGR_WS/usr/src
# 	% keywords \
#	`find . -name SCCS -prune -o -name '*Make*' -print -o '*.csh' -print`
#
# Output is sent to stderr, and consists of filenames with expanded, incorrect
# or missing sccs keywords and/or filenames that were not SCCS files.
#
# Exits with status 0 if all files are sccs files and all files have
# unexpanded, correct keywords. Otherwise, exits with a non-zero status.

#
# The CDPATH variable causes ksh's `cd' builtin to emit messages to stdout
# under certain circumstances, which can really screw things up; unset it.
#
unset CDPATH

PATH=/usr/bin:/usr/ccs/bin

USAGE="usage: `basename $0` [-p] <filename> ..."

# Canonical form for .c and .h files
CANON_C_H="^#pragma ident	\"\%\Z\%\%\M\%	\%\I\%	\%\E\% SMI\""
# Canonical form for other files
CANON_OTHER="ident	\"\%\Z\%\%\M\%	\%\I\%	\%\E\% SMI\""
STANDARD="ident	\"(\%\Z\%\%\M\%	+\%\I\%|\%W\%)	+\%\E\% SMI\""
EXPANDED="@\(#\).*[ 	]+[1-9]+(\.[0-9]+)+[ 	]+(-[ 	]+)?[0-9][0-9]/[01][0-9]/[0-3][0-9][ 	]+.*(SMI|Sun)"
LIBERAL="(\%\Z\%\%\M\%[ 	]+\%\I\%|\%W\%)[ 	]+\%\E\%[ 	]+.*(SMI|Sun)"
VERSION="@version.*[0-9]"

check_file() {
    fname=$1
    bname=$2
    canon_str=$3

    egrep "$VERSION" $bname
    if [ $? -eq 0 ]; then
        echo "^ Expanded version string in $fname"
	exitcode=1
    fi

    if [ $pedantic -eq 1 ]; then
	egrep -s "$canon_str" $bname
	if [ $? -ne 0 ]; then
	    echo "Incorrect ident string in $fname"
	    exitcode=1
	fi
    elif [ $liberal -eq 1 ]; then
	egrep -s "$LIBERAL" $bname
	if [ $? -ne 0 ]; then
	    egrep -s "$EXPANDED" $bname
	    if [ $? -eq 0 ]; then
		echo "Expanded keywords in $fname"
	    else
		echo "Incorrect ident string in $fname"
	    fi
	    exitcode=1
	fi
    else
	egrep -s "$STANDARD" $bname
	if [ $? -ne 0 ]; then
	    egrep -s "$EXPANDED" $bname
	    if [ $? -eq 0 ]; then
		echo "Expanded keywords in $fname"
	    else
		echo "Incorrect ident string in $fname"
	    fi
	    exitcode=1
	fi
    fi
}

pedantic=0
liberal=0
cwd=`pwd`
exitcode=0
rm -f /tmp/xxx$$ /tmp/kywrds.$$
trap "rm -f /tmp/xxx$$ /tmp/kywrds.$$" 0

while getopts lp c
do
    case $c in
    l)	liberal=1;;
    p)	pedantic=1;;
    \?)	echo $USAGE
	exit 2;;
    esac
done
shift `expr $OPTIND - 1`

for i
do
    dir=`dirname $i`
    file=`basename $i`

    cd $dir
    if [ -f SCCS/s.$file ]; then
	if [ -f SCCS/p.$file ]; then
	    case "$file" in
		*.cxx|*.cc|*.c|*.hh|*.h)
		    canon_str="$CANON_C_H";;
		*)
		    canon_str="$CANON_OTHER";;
	    esac
	    check_file $i $file "$canon_str"
	else
	    sccs get -p $file > /dev/null 2>/tmp/xxx$$
	    egrep -s "cm7" /tmp/xxx$$
	    if [ $? -eq 0 ]; then
		egrep -s "$EXPANDED" $file
		if [ $? -eq 0 ]; then
		    echo "Expanded keywords in $i"
		else
		    echo "Missing keywords in $i"
		fi
		exitcode=1
	    else
	    	sccs get -p -k $file > /tmp/kywrds.$$ 2>/tmp/xxx$$
		case "$file" in
		    *.cxx|*.cc|*.c|*.hh|*.h)
			canon_str="$CANON_C_H";;
		    *)
			canon_str="$CANON_OTHER";;
		esac
		check_file $i /tmp/kywrds.$$ "$canon_str"
    	    fi
    	fi
    else
    	echo "Not an SCCS file: $i"
    	exitcode=1
    fi
    cd $cwd
done

exit $exitcode
