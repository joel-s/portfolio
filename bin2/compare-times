#!/bin/bash

# Run commands repeatedly in an interlaced order, p

# This script does not work for commands that take more than 1 minute to
# run!

#TMP_PREFIX=/tmp/time-$$

if [ $# -lt 3 ]; then
    echo "usage: $0 iterations cmd1 cmd2 [...]"
    exit
fi

let iterations=$1
shift

cmds=("$@")
declare -a totals

# Run commands a couple times to ensure stuff is in the cache
for cmd in "$cmds"; do
    $cmd >/dev/null 2>&1
    $cmd >/dev/null 2>&1
done

let i=0
while [ $i -lt $iterations ]; do
    printf "$i "
    # Run all the commands.
    let cNum=0
    let totals[cNum]=0
    while [ $cNum -lt "${#cmds[@]}" ]; do
        cmd=${cmds[$cNum]}
        ms=$( (time $cmd >/dev/null 2>&1) 2>&1 | grep real |
              tr -d "[:alpha:][:space:]." )
        echo ms=$ms
        # the above converts "real    0m0.085s" into 00085
        # 10# below ensures bash treats this as decimal (not octal)
        let newTotal=totals[cNum]+10#$ms
        totals[cNum]=$newTotal
        echo totals[cNum]=${totals[${cNum}]}

        let cNum=cNum+1
    done
    let i=i+1
done

echo
echo === TOTALS ===
let cNum=0
while [ $cNum -lt "${#cmds[@]}" ]; do
    let total=totals[cNum]
    let average=(total*1000)/iterations
    let seconds=average/1000000
    let micros=average%1000000
    printf "%3d.%06d %-12s %s\n" "$seconds" "$micros" "($total)" "${cmds[$cNum]}"
    let cNum=cNum+1
done
